<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[node小程序]]></title>
      <url>/Blog/2017/08/03/node%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
      <content type="html"><![CDATA[<p>回想起当初接触Node,自己编写的小程序之一</p>
<h2 id="显示图片路径或下载图片到本地"><a href="#显示图片路径或下载图片到本地" class="headerlink" title="显示图片路径或下载图片到本地"></a>显示图片路径或下载图片到本地</h2><h3 id="首先我们安装小程序到自己电脑上"><a href="#首先我们安装小程序到自己电脑上" class="headerlink" title="首先我们安装小程序到自己电脑上"></a>首先我们安装小程序到自己电脑上</h3><img src="/Blog/image/1.png">
<a id="more"></a>
<img src="/Blog/image/2.png">
<h3 id="下面我们运行我们的小程序（例：我们获取百度首页上的图片路径）"><a href="#下面我们运行我们的小程序（例：我们获取百度首页上的图片路径）" class="headerlink" title="下面我们运行我们的小程序（例：我们获取百度首页上的图片路径）"></a>下面我们运行我们的小程序（例：我们获取百度首页上的图片路径）</h3><img src="/Blog/image/3.png">
<img src="/Blog/image/4.png">
<h3 id="如果你需要下载，把上文中的-t转换为-d即可（下载路径是根据你当前所在目录而定）"><a href="#如果你需要下载，把上文中的-t转换为-d即可（下载路径是根据你当前所在目录而定）" class="headerlink" title="如果你需要下载，把上文中的-t转换为-d即可（下载路径是根据你当前所在目录而定）"></a>如果你需要下载，把上文中的-t转换为-d即可（下载路径是根据你当前所在目录而定）</h3><img src="/Blog/image/5.png">
<img src="/Blog/image/6.png">]]></content>
      
        
        <tags>
            
            <tag> node </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[express web开发常用代码]]></title>
      <url>/Blog/2017/08/01/express-web%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81/</url>
      <content type="html"><![CDATA[<blockquote><footer><strong>@Ma Yanlong</strong><cite><a href="https://nate-river.github.io/" target="_blank" rel="external">nate-river.github.io</a></cite></footer></blockquote>
<h3 id="处理普通post请求"><a href="#处理普通post请求" class="headerlink" title="处理普通post请求"></a>处理普通post请求</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">const bodyParser = require(&apos;body-parser&apos;);</div><div class="line">// parse application/x-www-form-urlencoded</div><div class="line">app.use(bodyParser.urlencoded(&#123;extended: false&#125;));</div><div class="line">// parse application/json</div><div class="line">app.use(bodyParser.json());</div><div class="line">app.post(&apos;/&apos;,(req,res)=&gt;&#123;</div><div class="line">  console.log(req.body);</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="处理session"><a href="#处理session" class="headerlink" title="处理session"></a>处理session</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">const session = require(&apos;express-session&apos;);</div><div class="line">app.use(session(&#123;</div><div class="line">  secret: &apos;keyboard cat&apos;,</div><div class="line">  resave: false,</div><div class="line">  saveUninitialized: true</div><div class="line">&#125;));</div><div class="line">app.get(&apos;/logincheck&apos;,(req,res)=&gt;&#123;</div><div class="line">  req.session.login = true;</div><div class="line">&#125;)</div><div class="line">// 中间件</div><div class="line">app.use(&apos;/admin&apos;,(req,res,next)=&gt;&#123;</div><div class="line">  if(req.seesion.login)&#123;</div><div class="line">    next();</div><div class="line">  &#125;else&#123;</div><div class="line">    res.redirct(&apos;/login&apos;);</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">const fs = require(&apos;fs&apos;);</div><div class="line">const async = require(&apos;async&apos;);</div><div class="line">const multer = require(&apos;multer&apos;);</div><div class="line">const upload = multer(&#123;dest: &apos;uploads/&apos;&#125;);</div><div class="line">app.post(&apos;/upload&apos;, upload.single(&apos;wangEditorH5File&apos;), function (req, res) &#123;</div><div class="line">  async.series([</div><div class="line">    function (callback) &#123;</div><div class="line">      fs.createReadStream(req.file.path).pipe(fs.createWriteStream(&apos;public/imgs/&apos; + req.file.originalname));</div><div class="line">      callback(null);</div><div class="line">    &#125;,</div><div class="line">    function (callback) &#123;</div><div class="line">      fs.unlink(path.resolve(req.file.path));</div><div class="line">      callback(null);</div><div class="line">    &#125;</div><div class="line">  ], function () &#123;</div><div class="line">    res.end(&apos;/imgs/&apos; + req.file.originalname);</div><div class="line">  &#125;);</div><div class="line"></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="react富文本编辑器组件"><a href="#react富文本编辑器组件" class="headerlink" title="react富文本编辑器组件"></a>react富文本编辑器组件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">  &lt;title&gt;Document&lt;/title&gt;</div><div class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/wangEditor.min.css&quot;&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;div id=&quot;page&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;script src=&quot;js/jquery-2.2.1.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;script src=&quot;js/wangEditor.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;script src=&quot;/js/admin.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">const React = require(&apos;react&apos;);</div><div class="line">const ReactDOM = require(&apos;react-dom&apos;);</div><div class="line">class Editor extends React.Component &#123;</div><div class="line">  constructor(props) &#123;</div><div class="line">    super(props);</div><div class="line">    this.getContents = this.getContents.bind(this);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  componentDidMount() &#123;</div><div class="line">    this.editor = new window.wangEditor(this.el);</div><div class="line">    this.editor.config.uploadImgUrl = &apos;/upload&apos;;</div><div class="line">    this.editor.create();</div><div class="line">    // 初始化内容</div><div class="line">    this.editor.$txt.html(&apos;&lt;div&gt;this is a a&lt;/div&gt;&apos;);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  getContents() &#123;</div><div class="line">    console.log(this.editor.$txt.html());</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  render() &#123;</div><div class="line">    return (</div><div class="line">      &lt;div&gt;</div><div class="line">        &lt;div contentEditable=&quot;true&quot; style= ref=&#123;(el)=&gt;&#123;this.el = el&#125;&#125;&gt;&lt;/div&gt;</div><div class="line">        &lt;div onClick=&#123;this.getContents&#125;&gt;获取内容&lt;/div&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">    );</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">ReactDOM.render(&lt;Editor/&gt;, document.querySelector(&apos;#page&apos;));</div></pre></td></tr></table></figure>
<h3 id="创建md5"><a href="#创建md5" class="headerlink" title="创建md5"></a>创建md5</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">const crypto = require(&apos;crypto&apos;);</div><div class="line">const hash = crypto.createHash(&apos;md5&apos;);</div><div class="line">hash.update(&apos;123456&apos;);</div><div class="line">console.log(hash.digest(&apos;hex&apos;));</div></pre></td></tr></table></figure>
<h3 id="mysql封装"><a href="#mysql封装" class="headerlink" title="mysql封装"></a>mysql封装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">const mysql = require(&apos;mysql&apos;);</div><div class="line">const pool = mysql.createPool(&#123;</div><div class="line">  connectionLimit: 1000,</div><div class="line">  host: &apos;localhost&apos;,</div><div class="line">  user: &apos;root&apos;,</div><div class="line">  password: &apos;root&apos;,</div><div class="line">  database: &apos;music&apos;</div><div class="line">&#125;);</div><div class="line">function query(sql, arr, fn) &#123;</div><div class="line">  pool.getConnection((err, con)=&gt; &#123;</div><div class="line">    con.query(sql, arr, (err, res)=&gt; &#123;</div><div class="line">      con.release();</div><div class="line">      fn(err, res);</div><div class="line">    &#125;)</div><div class="line">  &#125;)</div><div class="line">&#125;</div><div class="line">module.exports = &#123;</div><div class="line">  query: query</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="防止意外退出"><a href="#防止意外退出" class="headerlink" title="防止意外退出"></a>防止意外退出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">process.on(&apos;uncaughtException&apos;, (ex)=&gt; &#123;</div><div class="line">  console.log(&apos;error&apos;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="react项目中使用fetch"><a href="#react项目中使用fetch" class="headerlink" title="react项目中使用fetch"></a>react项目中使用fetch</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">// npm install whatwg-fetch --save</div><div class="line">// 在html页面中引入whatwg-fetch.js</div><div class="line"></div><div class="line">// fetch上传文件</div><div class="line">var input = document.querySelector(&apos;input[type=&quot;file&quot;]&apos;)</div><div class="line"></div><div class="line">var data = new FormData()</div><div class="line">data.append(&apos;file&apos;, input.files[0])</div><div class="line">data.append(&apos;user&apos;, &apos;hubot&apos;)</div><div class="line"></div><div class="line">fetch(&apos;/avatars&apos;, &#123;</div><div class="line">  method: &apos;POST&apos;,</div><div class="line">  body: data</div><div class="line">&#125;)</div><div class="line">// fetch提交表单</div><div class="line">var form = document.querySelector(&apos;form&apos;)</div><div class="line"></div><div class="line">fetch(&apos;/users&apos;, &#123;</div><div class="line">  method: &apos;POST&apos;,</div><div class="line">  body: new FormData(form)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> React </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/Blog/2017/08/01/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
